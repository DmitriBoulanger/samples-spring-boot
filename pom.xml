<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>de.dbo.samples.springboot</groupId>
	<artifactId>spring-boot</artifactId>
	<version>0.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>Samples Spring-Boot root</name>
	<description>
Root reactor for all Spring-boot samples.
This reactor performs complete plug-in management and fixes Java with its compiler
	</description>

	<properties>
		<!-- UTF-8 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	
		<!-- JAVA -->
		<java.version>1.8</java.version>
		<jdk.version>1.8</jdk.version>
		
		<!-- SPRING-BOOT version -->
		<spring-boot.version>1.4.0.RELEASE</spring-boot.version>
		
		<!-- ETC version -->
		
		
		<!-- ====================================================================================================== -->
		<!--                        MAVEN Plug-Ins Versions                                                         -->
		<!-- ====================================================================================================== -->

		<maven-antrun-plugin.version>1.6</maven-antrun-plugin.version>
		<maven-archetype-plugin.version>2.0</maven-archetype-plugin.version>
		<maven-assembly-plugin.version>2.5.1</maven-assembly-plugin.version>

		<!-- problems by upgrading to maven-bundle-plugin 2.4.0 -->
		<maven-bundle.version>2.3.7</maven-bundle.version>
		<maven-bundle-plugin.version>${maven-bundle.version}</maven-bundle-plugin.version>

		<maven-checkstyle-plugin.version>2.16</maven-checkstyle-plugin.version>
    	<!-- AtomicException.java causes a problem with Checksyle > 6.6 due to  https://github.com/checkstyle/checkstyle/issues/1903 -->
		<maven-checkstyle.version>6.6</maven-checkstyle.version>
		<maven-clean-plugin.version>2.5</maven-clean-plugin.version>
		<maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version>

		<maven-dependency-plugin.version>2.10</maven-dependency-plugin.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>

		<maven-eclipse-plugin.version>2.10</maven-eclipse-plugin.version>

		<maven-failsafe-plugin.version>2.18.1</maven-failsafe-plugin.version>

		<maven-install-plugin.version>2.5.2</maven-install-plugin.version>

		<maven-help-plugin.version>2.2</maven-help-plugin.version>

		<maven-jar-plugin.version>2.5</maven-jar-plugin.version>
		<maven-javadoc-plugin.version>2.10.4</maven-javadoc-plugin.version>
		<maven-jboss-as-maven-plugin.version>7.7.Final</maven-jboss-as-maven-plugin.version>

		<maven-remote-resources-plugin.version>1.4</maven-remote-resources-plugin.version>
    	<!-- resources plug-in needed by Camel maven archetypes -->
		<maven-resources-plugin.version>2.7</maven-resources-plugin.version>

		<maven-reporting-api.version>2.2.1</maven-reporting-api.version>
		<maven-reporting-impl.version>2.0.5</maven-reporting-impl.version>

		<maven-shade-plugin.version>2.4.1</maven-shade-plugin.version>
		<maven-site-plugin.version>3.4</maven-site-plugin.version>
		<maven-source-plugin.version>2.4</maven-source-plugin.version>
		<maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
		<maven-surefire-report-plugin.version>2.13</maven-surefire-report-plugin.version>

		<maven-war-plugin.version>2.6</maven-war-plugin.version>
		
		<!-- ====================================================================================================== -->
		<!--                         CODEHAUS  MOJO Plug-Ins Versions                                               -->
		<!-- ====================================================================================================== -->

		<build-helper-maven-plugin.version>1.9.1</build-helper-maven-plugin.version>
		<exec-maven-plugin.version>1.3.2</exec-maven-plugin.version>
		<versions-maven-plugin.version>2.2</versions-maven-plugin.version>
		<cargo-maven2-plugin.version>1.4.8</cargo-maven2-plugin.version>
		
		<!-- ====================================================================================================== -->
		<!--                       DOCKER Plug-In Version                                                           -->
		<!-- ====================================================================================================== -->
		<fabric8-docker.plugin.version>0.16.7</fabric8-docker.plugin.version>
		
		<!-- ====================================================================================================== -->
		<!--                     SPRING-BOOT Plug-Ins Versions                                                      -->
		<!-- ====================================================================================================== -->

		<spring-boot-maven-plugin.version>${spring-boot.version}</spring-boot-maven-plugin.version>
		
		<!-- ====================================================================================================== -->
		<!--                           ETC Plug-Ins  Versions                                                       -->
		<!-- ====================================================================================================== -->

		<jooq.version>3.8.4</jooq.version>
		<git-commit-id-plugin.version>2.1.13</git-commit-id-plugin.version>
		<jbehave-maven-plugin.version>4.0.5</jbehave-maven-plugin.version>

	</properties>

	<modules>
		<!--  SPRING-BOOT DEPENDENCIS as POM-artifact spring-boot-bom -->
		<module>spring-boot-bom/v${spring-boot.version}</module>
		
		<module>spring-boot-REST</module>
		<module>spring-boot-DATA</module>
		<module>spring-boot-DOCKER</module>
		<module>spring-boot-JBEHAVE</module>
		<module>spring-boot-CAMEL</module>
		<module>spring-boot-MVC</module>
		<module>spring-boot-ETC</module>
	</modules>

	<dependencyManagement>
		<dependencies>
		
			<!-- SPRING-BOOT with dependencies                -->
			<!-- Artifact is created as a module in the above -->
			<dependency>
				<groupId>de.dbo.samples.springboot</groupId>
				<artifactId>spring-boot-bom</artifactId>
				<version>${project.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>de.dbo.samples.springboot</groupId>
				<artifactId>spring-boot-ETC-utilities</artifactId>
				<version>${project.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
			
				<!-- ============================================================================================ -->
				<!--                               MAVEN Plug-Ins                                                 -->
				<!-- ============================================================================================ -->

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven-antrun-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
					<configuration>
						<recompressZippedFiles>false</recompressZippedFiles>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven-dependency-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>${maven-eclipse-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-help-plugin</artifactId>
					<version>${maven-help-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven-shade-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven-site-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin.version}</version>
					<configuration>
						<failOnMissingWebXml>false</failOnMissingWebXml>
					</configuration>
				</plugin>
				
				<!-- ============================================================================================ -->
				<!--                          CODEHAUS MOJO Plug-Ins                                              -->
				<!-- ============================================================================================ -->

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${build-helper-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${exec-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${versions-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<version>${cargo-maven2-plugin.version}</version>
				</plugin>	

				<!-- ============================================================================================ -->
				<!--                             SPRING-BOOT Plug-Ins                                             -->
				<!-- ============================================================================================ -->

				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot-maven-plugin.version}</version>
				</plugin>
				

				<!-- ============================================================================================ -->
				<!--                         DOCKER Plug-Ins                                                      -->
				<!-- ============================================================================================ -->
				
				<plugin>			
                	<groupId>com.spotify</groupId>
                	<artifactId>docker-maven-plugin</artifactId>
               	 	<version>${spotify-docker.plugin.version}</version>
				</plugin>
				
				<plugin>			
					<groupId>io.fabric8</groupId>
  					<artifactId>docker-maven-plugin</artifactId>
  					<version>${fabric8-docker.plugin.version}</version>
				</plugin>		
				

				
				<!-- ============================================================================================ -->
				<!--                             ETC Plug-Ins                                                     -->
				<!-- ============================================================================================ -->

				<plugin>
					<groupId>org.jooq</groupId>
					<artifactId>jooq-codegen-maven</artifactId>
					<version>${jooq.version}</version>
				</plugin>
				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
					<version>${git-commit-id-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.jbehave</groupId>
					<artifactId>jbehave-maven-plugin</artifactId>
					<version>${jbehave-maven-plugin.version}</version>
				</plugin>

			</plugins>
		</pluginManagement>
		
		<!-- ============================================================================================ -->
		<!--                               MAVEN Plug-Ins                                                 -->
		<!-- ============================================================================================ -->

		<plugins>
			<!-- Compiler -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<!-- Tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/*Tests.java</include>
						<include>**/*Test.java</include>
						<include>**/Test.java</include>
					</includes>
					<excludes>
						<exclude>**/Abstract*.java</exclude>
					</excludes>
					<systemPropertyVariables>
						<java.awt.headless>true</java.awt.headless>
					</systemPropertyVariables>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>
	
		<!-- ========================================================================================= -->	
	    <!--                                  SPRING-BOOT                                              -->
		<!-- ========================================================================================= -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-logging</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- ========================================================================================= -->	
	    <!--                                  LOGGING  CALLBACK EXTENSIONS                             -->
		<!-- ========================================================================================= -->

		<dependency>
			<groupId>org.codehaus.janino</groupId>
			<artifactId>janino</artifactId>
		</dependency>


	</dependencies>

</project>
